openapi: 3.0.0
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    Ini adalah contoh dokumentasi api
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  version: 1.0.0
servers:
  - url: http://localhost:50050 
tags:
  - name: aut
    description: Everything about auth
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /whoami:
    get:
      tags:
        - auth
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: checktoken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
        "405":
          description: Validation exception
  /login:
    post:
      tags:
        - auth
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Auth"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
        "405":
          description: Validation exception

components:
  schemas:
    Auth:
      type: object
      properties:
        email:
          type: string
          example: sabrina@mail.com
        password:
          type: string
          example: password123
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: integer
          format: int64
          example: 198772
        email:
          type: integer
          format: int32
          example: 7
        password:
          type: string
          format: date-time
  requestBodies:
    LoginRequest:
      description: Login Object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
